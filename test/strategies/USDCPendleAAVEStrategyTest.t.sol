// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.29;

import {Test, console} from "forge-std/Test.sol";
import {SparkleXVault} from "../../src/SparkleXVault.sol";
import {PendleAAVEStrategy} from "../../src/strategies/aave/PendleAAVEStrategy.sol";
import {AAVEHelper} from "../../src/strategies/aave/AAVEHelper.sol";
import {TokenSwapper} from "../../src/utils/TokenSwapper.sol";
import {ERC20} from "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import {Ownable} from "@openzeppelin/contracts/access/Ownable.sol";
import {Vm} from "forge-std/Vm.sol";
import {IWithdrawRequestNFT} from "../../interfaces/etherfi/IWithdrawRequestNFT.sol";
import {IPool} from "../../interfaces/aave/IPool.sol";
import {IAaveOracle} from "../../interfaces/aave/IAaveOracle.sol";
import {IPriceOracleGetter} from "../../interfaces/aave/IPriceOracleGetter.sol";
import {TestUtils} from "../TestUtils.sol";
import {Constants} from "../../src/utils/Constants.sol";
import {IPAllActionV3} from "@pendle/contracts/interfaces/IPAllActionV3.sol";
import {IPPrincipalToken} from "@pendle/contracts/interfaces/IPPrincipalToken.sol";
import {IPMarketV3} from "@pendle/contracts/interfaces/IPMarketV3.sol";
import {PendleHelper} from "../../src/strategies/pendle/PendleHelper.sol";
import {DummyDEXRouter} from "../mock/DummyDEXRouter.sol";
import {BasePendleStrategyTest} from "./BasePendleStrategyTest.t.sol";

// run this test with mainnet fork
// forge test --fork-url <rpc_url> --match-path USDCPendleAAVEStrategyTest -vvv
contract USDCPendleAAVEStrategyTest is BasePendleStrategyTest {
    AAVEHelper public aaveHelper;
    address public aaveHelperOwner;
    uint256 public magicUSDCAmountLeveraged = 9000e6;    

    ///////////////////////////////
    // Note this address is only meaningful for this test
    ///////////////////////////////
    address public constant PENDLE_AAVE_STRATEGY_ADDRESS = 0xf10b150ae0c2D2C0dF82AE181dBcF2eA71573401;
    string public constant PENDLE_AAVE_STRATEGY_NAME = "sparklex.pendle.aave.strategy";

    ///////////////////////////////
    // mainnet pendle PT pools: active
    ///////////////////////////////    
    IPool aavePool = IPool(0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2);
    address public constant sUSDe = 0x9D39A5DE30e57443BfF2A8307A4256c8797A3497;
    address public constant sUSDe_FEED = 0xFF3BC18cCBd5999CE63E788A1c250a88626aD099;

    // sUSDe JUL31 market
    address public constant PT_ATOKEN_ADDR1 = 0xDE6eF6CB4aBd3A473ffC2942eEf5D84536F8E864;

    function setUp() public {
        stkVault = new SparkleXVault(ERC20(usdc), "SparkleXVault", "SPXV");
        stkVOwner = stkVault.owner();
        _changeWithdrawFee(stkVOwner, address(stkVault), 0);

        vm.startPrank(stkVOwner);
        stkVault.setEarnRatio(Constants.TOTAL_BPS);
        vm.stopPrank();

        swapper = new TokenSwapper();
        mockRouter = new DummyDEXRouter();
    }

    function test_GetMaxLTV() public {
        (myStrategy, strategist) = _createPendleStrategy(true);
        uint256 _ltv = aaveHelper.getMaxLTV();
        assertEq(_ltv, 9000);
    }

    function test_Basic_Invest_Redeem_PendleAAVE(uint256 _testVal) public {
        (myStrategy, strategist) = _createPendleStrategy(false);
        _fundFirstDepositGenerouslyWithERC20(mockRouter, address(stkVault), usdcPerETH);
        address _user = TestUtils._getSugarUser();

        TestUtils._makeVaultDepositWithMockRouter(
            mockRouter, address(stkVault), _user, usdcPerETH, _testVal, 10 ether, 100 ether
        );

        uint256 _initSupply = magicUSDCAmount;
        uint256 _initDebt = magicUSDCAmountLeveraged;//aaveHelper.previewLeverageForInvest(_initSupply, _initDebt);

        bytes memory _prepareCALLDATA = _getZapInCalldataFromSDK(address(PT_ADDR1), magicUSDCAmount);
        bytes memory _flCALLDATA = _getZapInCalldataFromSDK(address(PT_ADDR1), _initDebt);

        vm.startPrank(strategist);
        PendleAAVEStrategy(myStrategy).invest(_initSupply, _initDebt, abi.encode(_prepareCALLDATA, _initDebt, _flCALLDATA));
        vm.stopPrank();

        _printAAVEPosition();
        (uint256 _netSupply, uint256 _debt, uint256 _totalSupply) = PendleAAVEStrategy(myStrategy).getNetSupplyAndDebt(true);
        assertTrue(_assertApproximateEq(_totalSupply, (_initSupply + _initDebt), 20 * MIN_SHARE));
        _checkBasicInvariants(address(stkVault));
    }

    function _printAAVEPosition() internal view returns (uint256, uint256) {
        (uint256 _cBase, uint256 _dBase, uint256 _leftBase, uint256 _liqThresh, uint256 _ltv, uint256 _healthFactor) =
            aavePool.getUserAccountData(address(myStrategy));
        console.log("_ltv:%d,_liqThresh:%d,_healthFactor:%d", _ltv, _liqThresh, _healthFactor);
        console.log("_cBase:%d,_dBase:%d,_leftBase:%d", _cBase, _dBase, _leftBase);
        return (_ltv, _healthFactor);
    }

    function _getZapInCalldataFromSDK(address _pendlePT, uint256 _assetAmount) internal view returns(bytes memory){
        bytes memory _callData;
        if (_pendlePT == address(PT_ADDR1) && _assetAmount == magicUSDCAmount) {
            // slippage 1% with aggragator enabled
            _callData =
                hex"c81f847a000000000000000000000000f10b150ae0c2d2c0df82ae181dbcf2ea715734010000000000000000000000004339ffe2b7592dc783ed13cce310531ab366deac000000000000000000000000000000000000000000000042e22222f12976a720000000000000000000000000000000000000000000000021c78ac6a8582c6918000000000000000000000000000000000000000000000046efd6a12e52c3a97f0000000000000000000000000000000000000000000000438f158d50b058d230000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000009184e72a00000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000920000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000000000000000000000000000000000499602d20000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000d4e9b0d466789d7f6201442eeccba6a75a552db000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000040000000000000000000000006088d94c5a40cecd3ae2d4e0710ca687b91c61d000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000068403b87e5f000000000000000000000000000000000000000000000000000000000001a663000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a349700000000000000000000000000000000000000000000000000000000499602d200000000000000000000000000000000000000000000003848cb08d1a0e9aac000000000000000000000000000000000000000000000000000000000684ef981000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000660000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000499602d20000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000100000000000000000000000056bd269db96a089295d742351ba459fb0c279fe20000000000000000000000000000000000000000000000000000000000000001000000000000000000000000b9a4406982d990648093c71eff9f1f63a040152e0000000000000000000000000000000000000000000000000000000000000001800000000000000000002710b9a4406982d990648093c71eff9f1f63a040152e000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000000000010000000000000000000000006747bcaf9bd5a5f0758cbe08903490e45ddfacb500000000000000000000000000000000000000000000000000000000000000010000000000000000000000006747bcaf9bd5a5f0758cbe08903490e45ddfacb500000000000000000000000000000000000000000000000000000000000000018000000000000000000027107eb59373d63627be64b42406b108b602174b4ccc0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000040000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        } else if (_pendlePT == address(PT_ADDR1) && _assetAmount == magicUSDCAmountLeveraged)  {
            // slippage 1% with aggragator enabled
            _callData =
                hex"c81f847a000000000000000000000000f10b150ae0c2d2c0df82ae181dbcf2ea715734010000000000000000000000004339ffe2b7592dc783ed13cce310531ab366deac0000000000000000000000000000000000000000000001e777a36e80dd2add6200000000000000000000000000000000000000000000000276234f0c83d012e8000000000000000000000000000000000000000000000204edc064ca6b8fdc3c000000000000000000000000000000000000000000000004ec469e1907a025d0000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000009184e72a00000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000920000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000218711a000000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000d4e9b0d466789d7f6201442eeccba6a75a552db000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000040000000000000000000000006088d94c5a40cecd3ae2d4e0710ca687b91c61d000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000068403b87e5f000000000000000000000000000000000000000000000000000000000001a663000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000000000000000000000000000000000000218711a0000000000000000000000000000000000000000000000019a274717fa037fab1000000000000000000000000000000000000000000000000000000000684f037b00000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000218711a000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000100000000000000000000000016623c35ef61d92aaaf98f25bd64ea962fbd6a12000000000000000000000000000000000000000000000000000000000000000100000000000000000000000016623c35ef61d92aaaf98f25bd64ea962fbd6a1200000000000000000000000000000000000000000000000000000000000000010000000000000000000027100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000080000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000000000000000000000000000000000000000000100000000000000000000000097a7f8be1364759266cc5a619772458cc126b612000000000000000000000000000000000000000000000000000000000000000100000000000000000000000097a7f8be1364759266cc5a619772458cc126b61200000000000000000000000000000000000000000000000000000000000000018000000000000000000027101dd125c32e4b5086c63cc13b3ca02c4a2a61fa9b000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c9b3e2c3ec88b1b4c0cd853f4321000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000003cb3a0d47fdaf4b511c8a6b9682d60827eaa0679132800961b66b59e105aafd443482cc1d075da00000000000000000000000000000000000000000000000000000000000684f165b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000b7e51d15161c49c823f3951d579ded61cd27272b000000000000000000000000a14ad7f4c766bd5ca9b79a4a81873b8bcdf57c86000000000000000000000000a14ad7f4c766bd5ca9b79a4a81873b8bcdf57c86000000000000000000000000000000000000000000000003f50d8b55efdf804e000000000000000000000000000000000000000000000000010789c505d419f80000000000000000000000000000000000000000000000000c7d713b49da00000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000413678cf560256dd28b2ff0d5cd163b345c3a1cb4ffedf997393bc11c35775e4402eee8a1aeacb20f065867648f4a7b69be20969addaf38deedc272a073ae5a9cf1c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        }
        return _callData;
    }

    function _getStormOutCalldataFromSDK(address _pendlePT, uint256 _ptAmount) internal view returns(bytes memory){
        bytes memory _callData;
        if (_pendlePT == address(PT_ADDR1) && _ptAmount == magicPTAmount) {
            // slippage 1% with aggragator enabled
            _callData =
                hex"594a88cc00000000000000000000000063670e16de53f8eb1cef55a46120bf137c4020f40000000000000000000000004339ffe2b7592dc783ed13cce310531ab366deac0000000000000000000000000000000000000000000000410d586a20a4c0000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000045fba7f30000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000fe6228a3866426e96611ed7a3d0dee918244fcb300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b5000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000a04e21fd0e900000000000000000000000000000000000000000000000000000000000000200000000000000000000000006e4141d33021b52c91c28608403db4a0ffb50ec6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000007400000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000404c134a970000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000e0e0e08a6a4b9dc7bd67bcb7aade5cf48157d444000000000000000000000000000000000000000000000037b69344c77bf9677a0000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000346dc5d638865000000c80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000404c134a970000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000e0e0e08a6a4b9dc7bd67bcb7aade5cf48157d44400000000000000000000000000000000000000000000000000000000480fb9e5000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000053e2d6238da300000032000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004b9000000000000000000000000481a8e030000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000888888888889758f76e7103c6cbf23abbf58f946000000000000000000000000000000000000000000000037b69344c77bf9677a000000000000000000000000000000000000000000000000000000004761f81c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006e4141d33021b52c91c28608403db4a0ffb50ec60000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000037b69344c77bf9677a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027d7b22536f75726365223a2250656e646c65222c22416d6f756e74496e555344223a22313230392e37303431363738343738393138222c22416d6f756e744f7574555344223a22313231302e32323736343939303331333131222c22526566657272616c223a22222c22466c616773223a302c22416d6f756e744f7574223a2231323039363939383433222c2254696d657374616d70223a313734393131313235322c22526f7574654944223a2263366431333566622d646232632d343463662d393530612d3461643165396363623466613a64366230623639362d303335642d346137342d626463622d303430383364656333646339222c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a22546b4872367a5368473769756241425867765151524a7330517363664b322f344c784e39692b4570556a5a6474536f70363755465637464f54375a7846465572516d4a6d756e4e3136344f364a47427977642b6b3041796130775042704d397632564c35466c6249566a2b7277677130626f31612b7969774f71416c7447564a56703064526a687a506e6b37334575487459596652686956436544433751343449535741476b7653796164595a5a6f556e4d70662f34374b5739653235474b36467a5866506657742f734f3863445a4277566d5758686550686b44387076344465486370685a556d6a39384269786d4769694d3569445631656f3254706e62745a54665463427a78526774314b374c564b44324d4f6f45764b6b2b454b76646764416b47646d5a55516243595537312f476e356a62616b687177354b36497375736e6175674e675341344f504c2b76485a65724261413d3d227d7d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        } 
        return _callData;
    }

    function _createPendleStrategy(bool _useMockRouter) internal returns (address, address) {
        bytes memory _constructorArgs = abi.encode(usdc, address(stkVault), USDC_USD_Feed);
        address _deployedStrategy = deployWithCreationCodeAndConstructorArgs(
            PENDLE_AAVE_STRATEGY_NAME, type(PendleAAVEStrategy).creationCode, _constructorArgs
        );

        assertEq(_deployedStrategy, PENDLE_AAVE_STRATEGY_ADDRESS);

        aaveHelper = new AAVEHelper(_deployedStrategy, ERC20(address(PT_ADDR1)), ERC20(usdc), ERC20(PT_ATOKEN_ADDR1), 8);
        aaveHelperOwner = aaveHelper.owner();

        vm.startPrank(stkVOwner);
        stkVault.addStrategy(_deployedStrategy, 100);
        vm.stopPrank();

        strategyOwner = PendleAAVEStrategy(_deployedStrategy).owner();

        address _routerAddr = (_useMockRouter ? address(mockRouter) : pendleRouterV4);
        pendleHelper = new PendleHelper(_deployedStrategy, _routerAddr, address(swapper));

        vm.startPrank(strategyOwner);
        PendleAAVEStrategy(_deployedStrategy).setSwapper(address(swapper));
        PendleAAVEStrategy(_deployedStrategy).setAAVEHelper(address(aaveHelper));
        PendleAAVEStrategy(_deployedStrategy).setPendleHelper(address(pendleHelper));
        PendleAAVEStrategy(_deployedStrategy).setPendleMarket(address(MARKET_ADDR1));
        vm.stopPrank();

        return (_deployedStrategy, PendleAAVEStrategy(_deployedStrategy).strategist());
    }
}
